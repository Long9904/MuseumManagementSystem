// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MuseumSystem.Infrastructure.DatabaseSetting;

#nullable disable

namespace MuseumSystem.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MuseumSystem.Domain.Entities.Account", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MuseumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MuseumId");

                    b.HasIndex("RoleId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.Area", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MuseumId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MuseumId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.Artifact", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArtifactCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<bool>("IsOriginal")
                        .HasColumnType("bit");

                    b.Property<double?>("Length")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PeriodTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.Property<double?>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Artifacts");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.ArtifactMedia", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArtifactId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<int>("MediaType")
                        .HasColumnType("int");

                    b.Property<string>("MimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtifactId");

                    b.ToTable("ArtifactMedia");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.DisplayPosition", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AreaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArtifactId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayPositionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("ArtifactId")
                        .IsUnique()
                        .HasFilter("[ArtifactId] IS NOT NULL");

                    b.ToTable("DisplayPositions");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.Image", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArtifactMediaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsThumbnail")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ArtifactMediaId")
                        .IsUnique();

                    b.ToTable("Image");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.Model3D", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArtifactMediaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BoundingBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PolygonCount")
                        .HasColumnType("int");

                    b.Property<int?>("TextureCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtifactMediaId")
                        .IsUnique();

                    b.ToTable("Model3D");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.Museum", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Museums");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.Account", b =>
                {
                    b.HasOne("MuseumSystem.Domain.Entities.Museum", "Museum")
                        .WithMany("Accounts")
                        .HasForeignKey("MuseumId");

                    b.HasOne("MuseumSystem.Domain.Entities.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Museum");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.Area", b =>
                {
                    b.HasOne("MuseumSystem.Domain.Entities.Museum", "Museum")
                        .WithMany("Areas")
                        .HasForeignKey("MuseumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Museum");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.ArtifactMedia", b =>
                {
                    b.HasOne("MuseumSystem.Domain.Entities.Artifact", "Artifact")
                        .WithMany("ArtifactMedias")
                        .HasForeignKey("ArtifactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artifact");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.DisplayPosition", b =>
                {
                    b.HasOne("MuseumSystem.Domain.Entities.Area", "Area")
                        .WithMany("DisplayPositions")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MuseumSystem.Domain.Entities.Artifact", "Artifact")
                        .WithOne("DisplayPosition")
                        .HasForeignKey("MuseumSystem.Domain.Entities.DisplayPosition", "ArtifactId");

                    b.Navigation("Area");

                    b.Navigation("Artifact");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.Image", b =>
                {
                    b.HasOne("MuseumSystem.Domain.Entities.ArtifactMedia", "ArtifactMedia")
                        .WithOne("Image")
                        .HasForeignKey("MuseumSystem.Domain.Entities.Image", "ArtifactMediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArtifactMedia");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.Model3D", b =>
                {
                    b.HasOne("MuseumSystem.Domain.Entities.ArtifactMedia", "ArtifactMedia")
                        .WithOne("Model3D")
                        .HasForeignKey("MuseumSystem.Domain.Entities.Model3D", "ArtifactMediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArtifactMedia");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.Area", b =>
                {
                    b.Navigation("DisplayPositions");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.Artifact", b =>
                {
                    b.Navigation("ArtifactMedias");

                    b.Navigation("DisplayPosition");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.ArtifactMedia", b =>
                {
                    b.Navigation("Image");

                    b.Navigation("Model3D");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.Museum", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Areas");
                });

            modelBuilder.Entity("MuseumSystem.Domain.Entities.Role", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
